		GLOBAL	BINARYSEARCH
TARGET	RN	1
INDEX	RN	2
MIN		RN	3
MAX		RN	4
MID		RN	5
VALUE	RN	7

		AREA SEARCH, CODE, READONLY			
BINARYSEARCH							;THIS LABEL IS NECESSARY
	STMFD SP!,{R3-R5,LR}
	MRS R0, CPSR
	STMFD SP!, {R0}
	
	;INIT REGS
	MOV MIN, #0
	MOV	MAX, #31
	
	;ERROR 
	MOV	INDEX, #0XFFFFFFFF
	
	;TABLE BASE ADDR
	LDR R6, =VIN
	
	;IS TARGET OUTSIDE OF RANGE?
	;IS TARGET LESS THAN RANGE?
	LDR VALUE, [R6, MIN, LSL #2]
	CMP VALUE, TARGET		;0 - 11 = -11
	BGT EXIT
	
	;IS TARGET GREATER THAN RANGE?
	LDR	VALUE, [R6, MAX, LSL #2]
	CMP VALUE, TARGET		;33 - 11 = 22
	BLT EXIT

;LOOP BACK POINT
LOOP
	;IS TARGET = MIN?
	LDR VALUE, [R6, MIN, LSL #2]
	CMP VALUE, TARGET
	MOVEQ INDEX, MIN
	BEQ EXIT
	
	;IS TARGET = MAX?
	LDR VALUE, [R6, MAX, LSL #2]
	CMP VALUE, TARGET
	MOVEQ INDEX, MAX
	BEQ EXIT

	;ARE MAX AND MIN ADJACENT INDICIES?
	SUB R8, MAX, MIN ;R8 = MAX - MIN
	CMP R8, #1
	BEQ EXIT
	
	;FINDING MIDPOINT
	ADD MID, MAX, MIN ;(MAX + MIN)
	ASR MID, #1	;(MAX + MIN) / 2
	LDR	VALUE, [R6, MID, LSL #2] ;LOAD MIDPOINT VALUE
	
	;IS MID VALUE = TARGET?
	CMP VALUE, TARGET ;SETS FLAGS (16 - 20 = -4), (16 - 14 = 4)
	MOVEQ INDEX, MID ;MOV MIN IN INDEX IF EQUAL
	BEQ EXIT ;BRANCH IF EQUAL
	
	MOVGT MAX, MID ;IF VALUE IS GREATER THAN TARGET
	MOVLT MIN, MID ;IF VALUE IS LESS THAN TARGET
	B LOOP
	
EXIT
	LDMFD SP!, {R0}
	MSR CPSR_F, R0
	LDMFD SP!, {R3-R5, PC}
	
	
STOP 	B	STOP

; A TABLE OF VALUES USED TO TEST THE PROGRAM
VIN DCD 1,2,3,4,5,6,7,8,9,10,11,12,13
	DCD 14,15,17,18,19,20,21,22,23 
	DCD 24,25,26,27,28,29,30,31,32,33
		END 							;ASSEMBLER DIRECTIVE TO INDICATE THE END OF CODE.